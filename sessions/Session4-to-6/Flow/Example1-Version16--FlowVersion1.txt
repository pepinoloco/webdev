1.)
C:\workspace-UT-React-Jan-2021\Session5\Example1-Version16\seasons\src\SeasonDisplay.js
const SeasonDisplay = props => {
    console.log("SeasonDisplay props.lat:"+props.lat);
    const season = getSeason(props.lat, new Date().getMonth()); //break
    console.log("season:"+season);
    
 //   const text = season === 'winter' ? 'Burr, it is chilly' : 'Lets hit the beach';
 //   const icon = season === 'winter' ? 'snowflake' : 'sun';

    //seasonConfig[season]; //return our object { text, iconName }
    console.log("seasonConfig[season]:",seasonConfig[season]);
    
    const {text, iconName } = seasonConfig[season];
    
    console.log("text:",text);
    console.log("iconName:",iconName);
    
    return (
        <div>
                <i className={`${iconName} icon`} />
                <h1>{text}</h1>
                <i className={`${iconName} icon`} />
        </div>
    );
};

2.)
C:\workspace-UT-React-Jan-2021\Session5\Example1-Version16\seasons\src\SeasonDisplay.js
/*
lat=-23.55052
*/
const getSeason = (lat, month) => {
    //handle summer months in northern hemisphere month > 2 && month < 9 && lat > 0
    //handle winter months in southern hemisphere month > 2 && month < 9 && lat <= 0

    if (month > 2 && month < 9) {
       return  lat > 0 ? 'summer' : 'winter';
    } 
    else 
    {
        //handle winter months in northern hemisphere month <=2 && month >= 9 && lat > 0 
        //handle summer months in southern hemisphere month <=2 && month >= 9 && lat <= 0 
        return lat > 0 ? 'winter' : 'summer';//break
    }

}

3.)
C:\workspace-UT-React-Jan-2021\Session5\Example1-Version16\seasons\src\SeasonDisplay.js
/*
season=summer
seasonConfig[season]={
    "text": "Let's hit the beach",
    "iconName": "sun"
}
text="Let's hit the beach"
iconName=sun
*/
const SeasonDisplay = props => {
    console.log("SeasonDisplay props.lat:"+props.lat);
    const season = getSeason(props.lat, new Date().getMonth());
    console.log("season:"+season);
    
 //   const text = season === 'winter' ? 'Burr, it is chilly' : 'Lets hit the beach';
 //   const icon = season === 'winter' ? 'snowflake' : 'sun';

    //seasonConfig[season]; //return our object { text, iconName }
    console.log("seasonConfig[season]:",seasonConfig[season]);
    
    const {text, iconName } = seasonConfig[season];
    
    console.log("text:",text);
    console.log("iconName:",iconName);
    
    return (
        <div>
                <i className={`${iconName} icon`} />
                <h1>{text}</h1>
                <i className={`${iconName} icon`} />
        </div>
    );
};

4.)
t was rendered to the screen,componentDidMount() before calling geolocation
index.js:35 My component was rendered to the screen,componentDidMount() after calling geolocation
index.js:22 GeolocationPosition {coords: GeolocationCoordinates, timestamp: 1616044499972}
SeasonDisplay.js:29 SeasonDisplay props.lat:-23.55052
SeasonDisplay.js:31 season:summer
SeasonDisplay.js:37 seasonConfig[season]: {text: "Let's hit the beach", iconName: "sun"}
SeasonDisplay.js:41 text: Let's hit the beach
SeasonDisplay.js:42 iconName: sun
index.js:25 after set state, inside successfull getCurrentPosition
webpackHotDevClient.js:76 The development server has disconnected.
Refresh the page if necessary.