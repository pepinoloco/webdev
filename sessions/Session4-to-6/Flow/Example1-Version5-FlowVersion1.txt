1.)
C:\workspace-UT-React-Jan-2021\Session5\Example1-Version5\seasons\src\index.js
import React from 'react';
import ReactDOM from 'react-dom';


class App extends React.Component {

    constructor(props) {
        super(props);

        this.state = { lat:null};//break

        window.navigator.geolocation.getCurrentPosition(
            (position) => {
                 console.log(position)
                //we called setState
                this.setState({ lat: position.coords.latitude})
            },
            (err) => console.log(err)
        );

    }
     //React says we have to define render!!
    render() {
        
        return <div>Latitude: {this.state.lat} </div>
    }
}

ReactDOM.render(
    <App />,
    document.querySelector('#root')
);

2.)

C:\workspace-UT-React-Jan-2021\Session5\Example1-Version5\seasons\src\index.js
/*
this.state.lat=null
*/
import React from 'react';
import ReactDOM from 'react-dom';


class App extends React.Component {

    constructor(props) {
        super(props);

        this.state = { lat:null};

        window.navigator.geolocation.getCurrentPosition(
            (position) => {
                 console.log(position)
                //we called setState
                this.setState({ lat: position.coords.latitude})
            },
            (err) => console.log(err)
        );

    }
     //React says we have to define render!!
    render() {
        
        return <div>Latitude: {this.state.lat} </div> //break
    }
}

ReactDOM.render(
    <App />,
    document.querySelector('#root')
);

3.)


C:\workspace-UT-React-Jan-2021\Session5\Example1-Version5\seasons\src\index.js
/*
this.state.lat=null
*/
import React from 'react';
import ReactDOM from 'react-dom';


class App extends React.Component {

    constructor(props) {
        super(props);

        this.state = { lat:null};

        window.navigator.geolocation.getCurrentPosition(
            (position) => {
                 console.log(position)
                //we called setState
                this.setState({ lat: position.coords.latitude})
            },
            (err) => console.log(err)
        );

    }
     //React says we have to define render!!
    render() {
        
        return <div>Latitude: {this.state.lat} </div> 
    }
}

ReactDOM.render(
    <App />,
    document.querySelector('#root')//break
);

4.)
C:\workspace-UT-React-Jan-2021\Session5\Example1-Version5\seasons\src\index.js
/*
position.coords.latitude=43.8842877
*/
import React from 'react';
import ReactDOM from 'react-dom';


class App extends React.Component {

    constructor(props) {
        super(props);

        this.state = { lat:null};

        window.navigator.geolocation.getCurrentPosition(
            (position) => {
                 console.log(position)
                //we called setState
                this.setState({ lat: position.coords.latitude}) //break
            },
            (err) => console.log(err)
        );

    }
     //React says we have to define render!!
    render() {
        
        return <div>Latitude: {this.state.lat} </div> 
    }
}

ReactDOM.render(
    <App />,
    document.querySelector('#root')
);

5.)
C:\workspace-UT-React-Jan-2021\Session5\Example1-Version5\seasons\src\index.js
/*
position.coords.latitude=43.8842877
*/
import React from 'react';
import ReactDOM from 'react-dom';


class App extends React.Component {

    constructor(props) {
        super(props);

        this.state = { lat:null};

        window.navigator.geolocation.getCurrentPosition(
            (position) => {
                 console.log(position)
                //we called setState
                this.setState({ lat: position.coords.latitude}) 
            },
            (err) => console.log(err)
        );

    }
     //React says we have to define render!!
    render() {
        
        return <div>Latitude: {this.state.lat} </div> //break
    }
}