1.)
C:\workspace-UT-React-Jan-2021\Session3\Example3-Version2\jsx\src\index.js
function testIt() {
    let values = [10, 20, 30, 40, 50]; //break
    asyncAdd(values).then(
        
        total => {
            console.log("After return of promise");
            console.log(`Main Total: ${total}`);
        }
    );
    console.log("outside of then");
}

2.)
C:\workspace-UT-React-Jan-2021\Session3\Example3-Version2\jsx\src\async.js
function testIt() {
    let values = [10, 20, 30, 40, 50]; //break
    asyncAdd(values).then(
        
        total => {
            console.log("After return of promise");
            console.log(`Main Total: ${total}`);
        }
    );
    console.log("outside of then"); //break
}

3.)
C:\workspace-UT-React-Sept-2021\Session3\Example3-Version2\jsx\src\async.js
import { sumValues } from "./sum";

export function asyncAdd(values) {
    return new Promise(callback =>
        setTimeout( () => {
            let total = sumValues(values); //break
            console.log(`Async Total: ${total}`);
            callback(total);
        },500));
}

4.)
C:\workspace-UT-React-Sept-2021\Session3\Example3-Version2\jsx\src\sum.js
export function sumValues (values) {
  return values.reduce((total, val) => total + val, 0); //break
}

5.)
C:\workspace-UT-React-Sept-2021\Session3\Example3-Version2\jsx\src\async.js
import { sumValues } from "./sum";

export function asyncAdd(values) {
    return new Promise(callback =>
        setTimeout( () => {
            let total = sumValues(values); 
            console.log(`Async Total: ${total}`);
            callback(total); //break
        },500));


6.)
C:\workspace-UT-React-Sept-2021\Session3\Example3-Version2\jsx\src\index.js
function testIt() {
    let values = [10, 20, 30, 40, 50];
    asyncAdd(values).then(
        
        total => {
            console.log("After return of promise");
            console.log(`Main Total: ${total}`); //break
        }
    );
    console.log("outside of then");
}